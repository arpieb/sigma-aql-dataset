author: Nikita Nazarov, oscd.community, Nasreddine Bencherchali (Nextron Systems)
date: '2023-07-21'
description: Detects calls to WinAPI functions from PowerShell scripts. Attackers
  can often leverage these APIs to avoid detection based on typical PowerShell function
  calls. Use this rule as a basis to hunt for interesting scripts.
detection:
  condition: selection
  selection:
    ScriptBlockText|contains:
    - AddSecurityPackage
    - AdjustTokenPrivileges
    - CloseHandle
    - CreateProcessWithToken
    - CreateRemoteThread
    - CreateThread
    - CreateUserThread
    - DangerousGetHandle
    - DuplicateTokenEx
    - EnumerateSecurityPackages
    - FreeLibrary
    - GetDelegateForFunctionPointer
    - GetLogonSessionData
    - GetModuleHandle
    - GetProcAddress
    - GetProcessHandle
    - GetTokenInformation
    - ImpersonateLoggedOnUser
    - LoadLibrary
    - memcpy
    - MiniDumpWriteDump
    - OpenDesktop
    - OpenProcess
    - OpenProcessToken
    - OpenThreadToken
    - OpenWindowStation
    - QueueUserApc
    - ReadProcessMemory
    - RevertToSelf
    - RtlCreateUserThread
    - SetThreadToken
    - VirtualAlloc
    - VirtualFree
    - VirtualProtect
    - WaitForSingleObject
    - WriteInt32
    - WriteProcessMemory
    - ZeroFreeGlobalAllocUnicode
falsepositives:
- This rule is mainly used for hunting and will generate quite a lot of false positives
  when applied in production. It's best combined with other fields such as the path
  of execution, the parent process, etc.
id: 9f22ccd5-a435-453b-af96-bf99cbb594d4
level: medium
logsource:
  category: ps_script
  product: windows
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse
status: experimental
tags:
- attack.execution
- attack.t1059.001
- attack.t1106
- detection.threat_hunting
title: WinAPI Function Calls Via PowerShell Scripts
